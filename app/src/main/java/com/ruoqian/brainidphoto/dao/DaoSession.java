package com.ruoqian.brainidphoto.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.ruoqian.brainidphoto.dao.Idphoto;
import com.ruoqian.brainidphoto.dao.IdphotoColor;
import com.ruoqian.brainidphoto.dao.IdphotoPrint;
import com.ruoqian.brainidphoto.dao.SearchRecord;

import com.ruoqian.brainidphoto.dao.IdphotoDao;
import com.ruoqian.brainidphoto.dao.IdphotoColorDao;
import com.ruoqian.brainidphoto.dao.IdphotoPrintDao;
import com.ruoqian.brainidphoto.dao.SearchRecordDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig idphotoDaoConfig;
    private final DaoConfig idphotoColorDaoConfig;
    private final DaoConfig idphotoPrintDaoConfig;
    private final DaoConfig searchRecordDaoConfig;

    private final IdphotoDao idphotoDao;
    private final IdphotoColorDao idphotoColorDao;
    private final IdphotoPrintDao idphotoPrintDao;
    private final SearchRecordDao searchRecordDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        idphotoDaoConfig = daoConfigMap.get(IdphotoDao.class).clone();
        idphotoDaoConfig.initIdentityScope(type);

        idphotoColorDaoConfig = daoConfigMap.get(IdphotoColorDao.class).clone();
        idphotoColorDaoConfig.initIdentityScope(type);

        idphotoPrintDaoConfig = daoConfigMap.get(IdphotoPrintDao.class).clone();
        idphotoPrintDaoConfig.initIdentityScope(type);

        searchRecordDaoConfig = daoConfigMap.get(SearchRecordDao.class).clone();
        searchRecordDaoConfig.initIdentityScope(type);

        idphotoDao = new IdphotoDao(idphotoDaoConfig, this);
        idphotoColorDao = new IdphotoColorDao(idphotoColorDaoConfig, this);
        idphotoPrintDao = new IdphotoPrintDao(idphotoPrintDaoConfig, this);
        searchRecordDao = new SearchRecordDao(searchRecordDaoConfig, this);

        registerDao(Idphoto.class, idphotoDao);
        registerDao(IdphotoColor.class, idphotoColorDao);
        registerDao(IdphotoPrint.class, idphotoPrintDao);
        registerDao(SearchRecord.class, searchRecordDao);
    }
    
    public void clear() {
        idphotoDaoConfig.clearIdentityScope();
        idphotoColorDaoConfig.clearIdentityScope();
        idphotoPrintDaoConfig.clearIdentityScope();
        searchRecordDaoConfig.clearIdentityScope();
    }

    public IdphotoDao getIdphotoDao() {
        return idphotoDao;
    }

    public IdphotoColorDao getIdphotoColorDao() {
        return idphotoColorDao;
    }

    public IdphotoPrintDao getIdphotoPrintDao() {
        return idphotoPrintDao;
    }

    public SearchRecordDao getSearchRecordDao() {
        return searchRecordDao;
    }

}
